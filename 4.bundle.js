(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{288:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(280),l=n(22),m=n(281),u=n(38);var c=class extends a.Component{constructor(e){super(e),this.state={error:null}}componentDidCatch(e,t){this.setState({error:e}),u.withScope(n=>{Object.keys(t).forEach(e=>{n.setExtra(e,t[e])}),u.captureException(e)})}render(){return this.state.error?r.a.createElement("a",{onClick:()=>u.showReportDialog()},"Report feedback"):this.props.children}};function s(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],a=!0,r=!1,o=void 0;try{for(var l,m=e[Symbol.iterator]();!(a=(l=m.next()).done)&&(n.push(l.value),!t||n.length!==t);a=!0);}catch(e){r=!0,o=e}finally{try{a||null==m.return||m.return()}finally{if(r)throw o}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}t.default=(()=>{const e=s(Object(a.useState)(null),2),t=e[0],n=e[1],u=Object(a.createRef)(),i=Object(m.r)("",u),d=i.id,p=i.value,h=i.handleChange,f=i.inputRef;return r.a.createElement(c,null,r.a.createElement("main",null,t&&r.a.createElement("section",null,r.a.createElement("h2",{className:"mar-b-md mar-t-md"},"Submitted Data"),r.a.createElement("ul",null,r.a.createElement("li",null,"Hook: ",t.formValues.hookedInput))),r.a.createElement("section",null,r.a.createElement("h2",{className:"mar-b-md mar-t-md"},"Hook"),r.a.createElement("div",null,r.a.createElement(m.g,{name:"contactForm",onSubmit:e=>{console.log("From Hooked Input",e.hookedInput),n({formValues:e})}}," ",r.a.createElement("h4",null,"Hook"),r.a.createElement("label",{htmlFor:d},"Custom Hook Input"),r.a.createElement("input",{id:d,name:"hookedInput",type:"text",value:p,onChange:h,ref:f}),r.a.createElement(m.a,null,"Submit"))),r.a.createElement("div",{className:"mar-b-md mar-t-md"},r.a.createElement("h3",{className:"mar-b-md"},"Code from Example"),r.a.createElement(o.a,{language:"jsx",style:l.tomorrow},"\n  import React, { createRef } from 'react'\n  import {\n    useFormElement,\n    Button,\n    Form,\n  } from 'react-form-elements'\n\n  export default () => {\n    const ref = createRef()\n    const { id, value, handleChange, inputRef } = useFormElement('', ref)\n    return (<Form\n        name=\"sampleForm\"\n        onSubmit={values => {\n          sendData({ formValues: values })\n        }}\n      >\n        <input\n          id={id}\n          name=\"hookedInput\"\n          type=\"text\"\n          value={value}\n          onChange={handleChange}\n          ref={inputRef}\n        />\n        <Button>Submit</Button>\n      </Form>)\n    }\n  ")))))})}}]);